(()=>{"use strict";({994:function(){var t=this&&this.__awaiter||function(t,e,n,i){return new(n||(n=Promise))(function(o,c){function s(t){try{a(i.next(t))}catch(t){c(t)}}function l(t){try{a(i.throw(t))}catch(t){c(t)}}function a(t){var e;t.done?o(t.value):(e=t.value,e instanceof n?e:new n(function(t){t(e)})).then(s,l)}a((i=i.apply(t,e||[])).next())})};chrome.runtime.onInstalled.addListener(()=>{chrome.contextMenus.create({id:"saveToSnipVault",title:"Save to SnipVault",contexts:["selection"]})}),chrome.contextMenus.onClicked.addListener((e,n)=>{"saveToSnipVault"===e.menuItemId&&e.selectionText&&((e,n)=>{t(void 0,void 0,void 0,function*(){const t={text:e,url:(null==n?void 0:n.url)||"",title:(null==n?void 0:n.title)||"",timestamp:(new Date).toISOString(),tags:[]};try{const e=(yield chrome.storage.local.get(["highlights"])).highlights||[];e.push(t),yield chrome.storage.local.set({highlights:e}),chrome.notifications.create({type:"basic",iconUrl:"icons/snipvault.png",title:"SnipVault",message:"Highlight saved successfully!"})}catch(t){console.error("Error saving highlight:",t)}})})(e.selectionText,n)})}})[994]()})();